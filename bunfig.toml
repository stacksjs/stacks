# preload these modules before running bun
preload = [ "./resources/plugins/preloader.ts" ]

[test]
preload = [ "./tests/setup.ts" ]
coverage = true

[install]
# To configure Bun's package auto-install behavior.
# Default "auto" â€” when no node_modules folder is found, Bun
# will automatically install dependencies on the fly during execution.
# auto = true
linker = "hoisted"

registry = { url = "https://registry.npmjs.org/", token = "$BUN_AUTH_TOKEN" }

# whether to install optionalDependencies (currently needed because all drivers are optional)
optional = true

# whether to install devDependencies
dev = true

# whether to install peerDependencies
peer = true

# equivalent to `--production` flag
production = false

# equivalent to `--frozen-lockfile` flag
frozenLockfile = false

# equivalent to `--dry-run` flag
dryRun = false

# equivalent to `--concurrent-scripts` flag
# concurrentScripts = 16 # (cpu count or GOMAXPROCS) x2

# [install.scopes]
# registry as string
# myorg = "https://username:password@registry.myorg.com/"

# registry with username/password
# you can reference environment variables
# myorg = { username = "myusername", password = "$npm_password", url = "https://registry.myorg.com/" }

# registry with token
# myorg = { token = "$npm_token", url = "https://registry.myorg.com/" }

[install.cache]
# when true, don't load from the global cache.
# Bun may still write to node_modules/.cache
disable = false

# when true, always resolve the latest versions from the registry
disableManifest = false

[install.lockfile]

# whether to save the lockfile to disk
save = true

[run]
# equivalent to `bun --bun` for all `bun run` commands
bun = true

[serve.static]
plugins = [ "bun-plugin-tailwind" ]
